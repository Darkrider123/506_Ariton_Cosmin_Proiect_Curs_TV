/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 23 06:59:39 GMT 2023
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Exam_ESTest extends Exam_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = new Boolean((String) null);
      Integer integer0 = new Integer(40);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(4, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(45);
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.FALSE;
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(5, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Exam exam0 = new Exam();
      Integer integer0 = new Integer(58);
      Boolean boolean0 = Boolean.FALSE;
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(6, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Exam exam0 = new Exam();
      Integer integer0 = new Integer(66);
      Boolean boolean0 = Boolean.FALSE;
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(7, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(75);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(8, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Exam exam0 = new Exam();
      Integer integer0 = new Integer(90);
      Boolean boolean0 = Boolean.FALSE;
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(9, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = new Boolean(false);
      Integer integer0 = new Integer(100);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(10, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(0);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        exam0.grade(boolean0, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Exam", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(18);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(2, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = new Boolean("stg");
      Integer integer0 = new Integer(25);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(3, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = new Boolean("stg");
      Integer integer0 = new Integer(35);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(4, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(52);
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.FALSE;
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(5, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.valueOf(false);
      Integer integer0 = new Integer(55);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(6, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(80);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(8, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Exam exam0 = new Exam();
      Integer integer0 = new Integer(65);
      Boolean boolean0 = Boolean.FALSE;
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(7, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(95);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(10, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Exam exam0 = new Exam();
      Integer integer0 = new Integer(25);
      Boolean boolean0 = Boolean.TRUE;
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Exam exam0 = new Exam();
      Integer integer0 = new Integer(5472);
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        exam0.grade(boolean0, integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid points
         //
         verifyException("Exam", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(85);
      Integer integer1 = exam0.grade(boolean0, integer0);
      assertEquals(9, (int)integer1);
      
      Integer integer2 = exam0.grade(boolean0, integer1);
      assertEquals(1, (int)integer2);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Exam exam0 = new Exam();
      Boolean boolean0 = new Boolean("stg");
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        exam0.grade(boolean0, integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid points
         //
         verifyException("Exam", e);
      }
  }
}
