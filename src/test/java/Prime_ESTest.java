/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 23 06:59:46 GMT 2023
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Prime_ESTest extends Prime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Prime prime0 = new Prime();
      Integer integer0 = new Integer(1439);
      prime0.isPrime(integer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Prime prime0 = new Prime();
      Integer integer0 = new Integer(1217109659);
      // Undeclared exception!
      prime0.isPrime(integer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Prime prime0 = new Prime();
      // Undeclared exception!
      try { 
        prime0.isPrime((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Prime", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Prime prime0 = new Prime();
      Integer integer0 = new Integer(961);
      Boolean boolean0 = prime0.isPrime(integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Prime prime0 = new Prime();
      Integer integer0 = new Integer(990);
      Boolean boolean0 = prime0.isPrime(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Prime prime0 = new Prime();
      Integer integer0 = new Integer(2);
      Boolean boolean0 = prime0.isPrime(integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Prime prime0 = new Prime();
      Integer integer0 = new Integer(1);
      Boolean boolean0 = prime0.isPrime(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Prime prime0 = new Prime();
      Integer integer0 = new Integer(0);
      Boolean boolean0 = prime0.isPrime(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Prime prime0 = new Prime();
      Integer integer0 = new Integer((-1642));
      // Undeclared exception!
      try { 
        prime0.isPrime(integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Negative numbers not allowed
         //
         verifyException("Prime", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Prime prime0 = new Prime();
      Integer integer0 = new Integer(1929);
      Boolean boolean0 = prime0.isPrime(integer0);
      assertFalse(boolean0);
  }
}
